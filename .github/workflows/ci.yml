name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    strategy:
      max-parallel: 2
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
        django-version: ["4.2", "5.0", "5.1", "5.2"]
        os: [ubuntu-latest]
        exclude:
          - django-version: "4.2"
            python-version: "3.13"
          - django-version: "4.2"
            python-version: "3.14"
          - django-version: "5.0"
            python-version: "3.9"
          - django-version: "5.0"
            python-version: "3.13"
          - django-version: "5.0"
            python-version: "3.14"
          - django-version: "5.1"
            python-version: "3.9"
          - django-version: "5.2"
            python-version: "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      - name: Cache hatch environments
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/hatch
            ~/.cache/hatch
          key: hatch-${{ runner.os }}-py${{ matrix.python-version }}-django${{ matrix.django-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            hatch-${{ runner.os }}-py${{ matrix.python-version }}-django${{ matrix.django-version }}-
            hatch-${{ runner.os }}-py${{ matrix.python-version }}-
      - name: Install hatch with uv
        run: |
          uv tool install hatch
      - name: Run tests for Python ${{ matrix.python-version }} and Django ${{ matrix.django-version }} on ${{ matrix.os }} with coverage report
        run: |
          hatch run test.py${{ matrix.python-version }}-${{ matrix.django-version }}:cov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
